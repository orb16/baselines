% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateDistanceBaseline.R
\name{calcMyDists}
\alias{calcMyDists}
\title{Calculates distance from ellipse and distance from centroid.}
\usage{
calcMyDists(metadf, ord, group = "Time_period", reflev = "Pre-human",
  ordiType = "sd", conf = TRUE)
}
\arguments{
\item{metadf}{metadata (e.g. groups). Needs to be same length and order as rows that went into ordination.}

\item{ord}{the ordination object. Currently only works with NMDS}

\item{group}{the column in the metadata which contains the grouping variable for the baseline}

\item{reflev}{the value in the column group which is the baseline level}

\item{ordiType}{what sort of ordiellipse? Options are all those which ordiellipse accepts}

\item{conf}{use 95 CI or not? See ordiellipse options.}
}
\value{
A list, with a dataframe containing the metadf and distance from baseline, second, a spatial points object. Third, the baseline ellipse created as a spatial object.
}
\description{
Calculates distance from ellipse and distance from centroid.
}
\examples{

data("mite")
data("mite.env")
met <- metaMDS(mite, "jaccard")
dlist <- calcMyDists(metadf = mite.env, ord = met, group = "Topo", reflev = "Hummock")
par(mfrow = c(1, 3))
plot(met, type = "n")
plot(dlist[["baseline_polygon"]], add = TRUE,
col = adjustcolor("forestgreen", 0.2),
border = NA)
points(dlist[["all_points"]][dlist[["all_points"]]$Topo == "Hummock", ], col = "forestgreen",
pch = 16)
points(dlist[["all_points"]][dlist[["all_points"]]$Topo == "Blanket", ], col = "black",
pch = 16)
with(dlist[["distDF"]][dlist[["distDF"]]$Topo == "Blanket", ], plot(x = Shrub, y = distEllipse, xlab = "Shrub",
ylab = "Distance from baseline"))
plot(met, type = "n")
plot(dlist[["baseline_polygon"]], add = TRUE,
col = adjustcolor("forestgreen", 0.2),
border = NA)
with(dlist[["distDF"]][dlist[["distDF"]]$Topo == "Hummock", ],
points(x = NMDS1, y = NMDS2, cex = distEllipse, col = "forestgreen"))
with(dlist[["distDF"]][dlist[["distDF"]]$Topo == "Blanket", ],
points(x = NMDS1, y = NMDS2, cex = distEllipse, col = "black"))
}
